{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda resource stack creation using Amplify CLI",
  "Parameters": {
    "GROUP": {
      "Type": "String",
      "Default": ""
    },
    "modules": {
      "Type": "String",
      "Default": "",
      "Description": "Comma-delimited list of modules to be executed by a lambda trigger. Sent to resource as an env variable."
    },
    "resourceName": {
      "Type": "String",
      "Default": ""
    },
    "trigger": {
      "Type": "String",
      "Default": "true"
    },
    "functionName": {
      "Type": "String",
      "Default": ""
    },
    "roleName": {
      "Type": "String",
      "Default": ""
    },
    "parentResource": {
      "Type": "String",
      "Default": ""
    },
    "parentStack": {
      "Type": "String",
      "Default": ""
    },
    "env": {
      "Type": "String"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    },
    "authclientapp4182a555UserPoolId": {
      "Type": "String",
      "Default": "authclientapp4182a555UserPoolId"
    },
    "apiclientappGraphQLAPIIdOutput": {
      "Type": "String",
      "Default": "apiclientappGraphQLAPIIdOutput"
    },
    "apiclientappGraphQLAPIEndpointOutput": {
      "Type": "String",
      "Default": "apiclientappGraphQLAPIEndpointOutput"
    },
    "apiclientappGraphQLAPIKeyOutput": {
      "Type": "String",
      "Default": "apiclientappGraphQLAPIKeyOutput"
    },
    "apiAdminQueriesApiName": {
      "Type": "String",
      "Default": "apiAdminQueriesApiName"
    },
    "apiAdminQueriesApiId": {
      "Type": "String",
      "Default": "apiAdminQueriesApiId"
    },
    "functionAdminQueries55dab482Name": {
      "Type": "String",
      "Default": "functionAdminQueries55dab482Name"
    },
    "functionclientappd60c3fceName": {
      "Type": "String",
      "Default": "functionclientappd60c3fceName"
    },
    "functionbookingsRestApiFunctionName": {
      "Type": "String",
      "Default": "functionbookingsRestApiFunctionName"
    },
    "storagebookingsTableName": {
      "Type": "String",
      "Default": "storagebookingsTableName"
    },
    "storagebookingsTableArn": {
      "Type": "String",
      "Default": "storagebookingsTableArn"
    },
    "storagebookingsTableStreamArn": {
      "Type": "String",
      "Default": "storagebookingsTableStreamArn"
    },
    "apibookingsRestApiApiName": {
      "Type": "String",
      "Default": "apibookingsRestApiApiName"
    },
    "apibookingsRestApiApiId": {
      "Type": "String",
      "Default": "apibookingsRestApiApiId"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "clientapp4182a555PostConfirmation",
            {
              "Fn::Join": [
                "",
                [
                  "clientapp4182a555PostConfirmation",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "MODULES": {
              "Ref": "modules"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "GROUP": {
              "Ref": "GROUP"
            },
            "AUTH_CLIENTAPP4182A555_USERPOOLID": {
              "Ref": "authclientapp4182a555UserPoolId"
            },
            "API_CLIENTAPP_GRAPHQLAPIIDOUTPUT": {
              "Ref": "apiclientappGraphQLAPIIdOutput"
            },
            "API_CLIENTAPP_GRAPHQLAPIENDPOINTOUTPUT": {
              "Ref": "apiclientappGraphQLAPIEndpointOutput"
            },
            "API_CLIENTAPP_GRAPHQLAPIKEYOUTPUT": {
              "Ref": "apiclientappGraphQLAPIKeyOutput"
            },
            "API_ADMINQUERIES_APINAME": {
              "Ref": "apiAdminQueriesApiName"
            },
            "API_ADMINQUERIES_APIID": {
              "Ref": "apiAdminQueriesApiId"
            },
            "FUNCTION_ADMINQUERIES55DAB482_NAME": {
              "Ref": "functionAdminQueries55dab482Name"
            },
            "FUNCTION_CLIENTAPPD60C3FCE_NAME": {
              "Ref": "functionclientappd60c3fceName"
            },
            "FUNCTION_BOOKINGSRESTAPIFUNCTION_NAME": {
              "Ref": "functionbookingsRestApiFunctionName"
            },
            "STORAGE_BOOKINGSTABLE_NAME": {
              "Ref": "storagebookingsTableName"
            },
            "STORAGE_BOOKINGSTABLE_ARN": {
              "Ref": "storagebookingsTableArn"
            },
            "STORAGE_BOOKINGSTABLE_STREAMARN": {
              "Ref": "storagebookingsTableStreamArn"
            },
            "API_CLIENTAPP_BOOKINGTABLE_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:BookingTable:Name"
              }
            },
            "API_CLIENTAPP_BOOKINGTABLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:dynamodb:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":table/",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:BookingTable:Name"
                    }
                  }
                ]
              ]
            },
            "API_CLIENTAPP_USERTABLE_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:UserTable:Name"
              }
            },
            "API_CLIENTAPP_USERTABLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:dynamodb:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":table/",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:UserTable:Name"
                    }
                  }
                ]
              ]
            },
            "API_CLIENTAPP_CONTRACTORTABLE_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:ContractorTable:Name"
              }
            },
            "API_CLIENTAPP_CONTRACTORTABLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:dynamodb:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":table/",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:ContractorTable:Name"
                    }
                  }
                ]
              ]
            },
            "API_CLIENTAPP_SERVICETABLE_NAME": {
              "Fn::ImportValue": {
                "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:ServiceTable:Name"
              }
            },
            "API_CLIENTAPP_SERVICETABLE_ARN": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:dynamodb:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":table/",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${apiclientappGraphQLAPIIdOutput}:GetAtt:ServiceTable:Name"
                    }
                  }
                ]
              ]
            },
            "API_BOOKINGSRESTAPI_APINAME": {
              "Ref": "apibookingsRestApiApiName"
            },
            "API_BOOKINGSRESTAPI_APIID": {
              "Ref": "apibookingsRestApiApiId"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Timeout": 25,
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        }
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "clientapp4182a555PostConfirmation",
            {
              "Fn::Join": [
                "",
                [
                  "clientapp4182a555PostConfirmation",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "AmplifyResourcesPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "appsync:GraphQL"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:appsync:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":apis/",
                      {
                        "Ref": "apiclientappGraphQLAPIIdOutput"
                      },
                      "/types/Query/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:appsync:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":apis/",
                      {
                        "Ref": "apiclientappGraphQLAPIIdOutput"
                      },
                      "/types/Mutation/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:appsync:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":apis/",
                      {
                        "Ref": "apiclientappGraphQLAPIIdOutput"
                      },
                      "/types/Subscription/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "apigateway:POST",
                "apigateway:PUT",
                "apigateway:GET",
                "apigateway:HEAD",
                "apigateway:OPTIONS"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      "::/restapis/",
                      {
                        "Ref": "apibookingsRestApiApiName"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    }
  }
}